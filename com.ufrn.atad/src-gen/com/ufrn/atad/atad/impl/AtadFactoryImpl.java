/**
 * generated by Xtext 2.25.0
 */
package com.ufrn.atad.atad.impl;

import com.ufrn.atad.atad.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AtadFactoryImpl extends EFactoryImpl implements AtadFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AtadFactory init()
  {
    try
    {
      AtadFactory theAtadFactory = (AtadFactory)EPackage.Registry.INSTANCE.getEFactory(AtadPackage.eNS_URI);
      if (theAtadFactory != null)
      {
        return theAtadFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AtadFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AtadFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AtadPackage.DECLARA_COMANDO: return createDeclaraComando();
      case AtadPackage.COMANDO: return createComando();
      case AtadPackage.CLICAR: return createClicar();
      case AtadPackage.NAVEGAR: return createNavegar();
      case AtadPackage.ESCREVER: return createEscrever();
      case AtadPackage.COMANDOS_ACAO: return createComandosAcao();
      case AtadPackage.VERIFIQUE_PRESENTE: return createVerifiquePresente();
      case AtadPackage.VERIFIQUE_NAO_PRESENTE: return createVerifiqueNaoPresente();
      case AtadPackage.COMANDOS_VALIDADORES: return createComandosValidadores();
      case AtadPackage.ADICAO_COMANDO: return createAdicaoComando();
      case AtadPackage.QUANDO: return createQuando();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeclaraComando createDeclaraComando()
  {
    DeclaraComandoImpl declaraComando = new DeclaraComandoImpl();
    return declaraComando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comando createComando()
  {
    ComandoImpl comando = new ComandoImpl();
    return comando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Clicar createClicar()
  {
    ClicarImpl clicar = new ClicarImpl();
    return clicar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Navegar createNavegar()
  {
    NavegarImpl navegar = new NavegarImpl();
    return navegar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Escrever createEscrever()
  {
    EscreverImpl escrever = new EscreverImpl();
    return escrever;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComandosAcao createComandosAcao()
  {
    ComandosAcaoImpl comandosAcao = new ComandosAcaoImpl();
    return comandosAcao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VerifiquePresente createVerifiquePresente()
  {
    VerifiquePresenteImpl verifiquePresente = new VerifiquePresenteImpl();
    return verifiquePresente;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VerifiqueNaoPresente createVerifiqueNaoPresente()
  {
    VerifiqueNaoPresenteImpl verifiqueNaoPresente = new VerifiqueNaoPresenteImpl();
    return verifiqueNaoPresente;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComandosValidadores createComandosValidadores()
  {
    ComandosValidadoresImpl comandosValidadores = new ComandosValidadoresImpl();
    return comandosValidadores;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdicaoComando createAdicaoComando()
  {
    AdicaoComandoImpl adicaoComando = new AdicaoComandoImpl();
    return adicaoComando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Quando createQuando()
  {
    QuandoImpl quando = new QuandoImpl();
    return quando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtadPackage getAtadPackage()
  {
    return (AtadPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AtadPackage getPackage()
  {
    return AtadPackage.eINSTANCE;
  }

} //AtadFactoryImpl
