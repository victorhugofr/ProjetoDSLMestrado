/**
 * generated by Xtext 2.25.0
 */
package com.ufrn.atad.atad.util;

import com.ufrn.atad.atad.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see com.ufrn.atad.atad.AtadPackage
 * @generated
 */
public class AtadAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AtadPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AtadAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = AtadPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AtadSwitch<Adapter> modelSwitch =
    new AtadSwitch<Adapter>()
    {
      @Override
      public Adapter caseDeclaraComando(DeclaraComando object)
      {
        return createDeclaraComandoAdapter();
      }
      @Override
      public Adapter caseComando(Comando object)
      {
        return createComandoAdapter();
      }
      @Override
      public Adapter caseClicar(Clicar object)
      {
        return createClicarAdapter();
      }
      @Override
      public Adapter caseNavegar(Navegar object)
      {
        return createNavegarAdapter();
      }
      @Override
      public Adapter caseEscrever(Escrever object)
      {
        return createEscreverAdapter();
      }
      @Override
      public Adapter caseComandosAcao(ComandosAcao object)
      {
        return createComandosAcaoAdapter();
      }
      @Override
      public Adapter caseVerifique(Verifique object)
      {
        return createVerifiqueAdapter();
      }
      @Override
      public Adapter caseComandosValidadores(ComandosValidadores object)
      {
        return createComandosValidadoresAdapter();
      }
      @Override
      public Adapter caseAdicaoComando(AdicaoComando object)
      {
        return createAdicaoComandoAdapter();
      }
      @Override
      public Adapter caseQuando(Quando object)
      {
        return createQuandoAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.DeclaraComando <em>Declara Comando</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.DeclaraComando
   * @generated
   */
  public Adapter createDeclaraComandoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Comando <em>Comando</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Comando
   * @generated
   */
  public Adapter createComandoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Clicar <em>Clicar</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Clicar
   * @generated
   */
  public Adapter createClicarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Navegar <em>Navegar</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Navegar
   * @generated
   */
  public Adapter createNavegarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Escrever <em>Escrever</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Escrever
   * @generated
   */
  public Adapter createEscreverAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.ComandosAcao <em>Comandos Acao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.ComandosAcao
   * @generated
   */
  public Adapter createComandosAcaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Verifique <em>Verifique</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Verifique
   * @generated
   */
  public Adapter createVerifiqueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.ComandosValidadores <em>Comandos Validadores</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.ComandosValidadores
   * @generated
   */
  public Adapter createComandosValidadoresAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.AdicaoComando <em>Adicao Comando</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.AdicaoComando
   * @generated
   */
  public Adapter createAdicaoComandoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufrn.atad.atad.Quando <em>Quando</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufrn.atad.atad.Quando
   * @generated
   */
  public Adapter createQuandoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //AtadAdapterFactory
