/*
 * generated by Xtext 2.25.0
 */
grammar InternalAtad;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.ufrn.atad.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.ufrn.atad.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ufrn.atad.services.AtadGrammarAccess;

}

@parser::members {

 	private AtadGrammarAccess grammarAccess;

    public InternalAtadParser(TokenStream input, AtadGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DeclaraComando";
   	}

   	@Override
   	protected AtadGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDeclaraComando
entryRuleDeclaraComando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaraComandoRule()); }
	iv_ruleDeclaraComando=ruleDeclaraComando
	{ $current=$iv_ruleDeclaraComando.current; }
	EOF;

// Rule DeclaraComando
ruleDeclaraComando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDeclaraComandoAccess().getComandosComandoParserRuleCall_0());
			}
			lv_comandos_0_0=ruleComando
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDeclaraComandoRule());
				}
				add(
					$current,
					"comandos",
					lv_comandos_0_0,
					"com.ufrn.atad.Atad.Comando");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleComando
entryRuleComando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComandoRule()); }
	iv_ruleComando=ruleComando
	{ $current=$iv_ruleComando.current; }
	EOF;

// Rule Comando
ruleComando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComandoAccess().getComandosAcaoParserRuleCall_0());
		}
		this_ComandosAcao_0=ruleComandosAcao
		{
			$current = $this_ComandosAcao_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getComandosValidadoresParserRuleCall_1());
		}
		this_ComandosValidadores_1=ruleComandosValidadores
		{
			$current = $this_ComandosValidadores_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getAdicaoComandoParserRuleCall_2());
		}
		this_AdicaoComando_2=ruleAdicaoComando
		{
			$current = $this_AdicaoComando_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getQuandoParserRuleCall_3());
		}
		this_Quando_3=ruleQuando
		{
			$current = $this_Quando_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getEsperaParserRuleCall_4());
		}
		this_Espera_4=ruleEspera
		{
			$current = $this_Espera_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClicar
entryRuleClicar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClicarRule()); }
	iv_ruleClicar=ruleClicar
	{ $current=$iv_ruleClicar.current; }
	EOF;

// Rule Clicar
ruleClicar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='clicar'
		{
			newLeafNode(otherlv_0, grammarAccess.getClicarAccess().getClicarKeyword_0());
		}
		otherlv_1='em'
		{
			newLeafNode(otherlv_1, grammarAccess.getClicarAccess().getEmKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClicarAccess().getTipoLocalizadorTipoLocalizadoresEnumRuleCall_2_0());
				}
				lv_tipoLocalizador_2_0=ruleTipoLocalizadores
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClicarRule());
					}
					set(
						$current,
						"tipoLocalizador",
						lv_tipoLocalizador_2_0,
						"com.ufrn.atad.Atad.TipoLocalizadores");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getClicarAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClicarRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNavegar
entryRuleNavegar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavegarRule()); }
	iv_ruleNavegar=ruleNavegar
	{ $current=$iv_ruleNavegar.current; }
	EOF;

// Rule Navegar
ruleNavegar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='navegar'
		{
			newLeafNode(otherlv_0, grammarAccess.getNavegarAccess().getNavegarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNavegarAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavegarRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEscrever
entryRuleEscrever returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEscreverRule()); }
	iv_ruleEscrever=ruleEscrever
	{ $current=$iv_ruleEscrever.current; }
	EOF;

// Rule Escrever
ruleEscrever returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='escrever'
		{
			newLeafNode(otherlv_0, grammarAccess.getEscreverAccess().getEscreverKeyword_0());
		}
		otherlv_1='no'
		{
			newLeafNode(otherlv_1, grammarAccess.getEscreverAccess().getNoKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEscreverAccess().getTipoLocalizadorTipoLocalizadoresEnumRuleCall_2_0());
				}
				lv_tipoLocalizador_2_0=ruleTipoLocalizadores
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEscreverRule());
					}
					set(
						$current,
						"tipoLocalizador",
						lv_tipoLocalizador_2_0,
						"com.ufrn.atad.Atad.TipoLocalizadores");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getEscreverAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEscreverRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_conteudo_4_0=RULE_STRING
				{
					newLeafNode(lv_conteudo_4_0, grammarAccess.getEscreverAccess().getConteudoSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEscreverRule());
					}
					setWithLastConsumed(
						$current,
						"conteudo",
						lv_conteudo_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComandosAcao
entryRuleComandosAcao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComandosAcaoRule()); }
	iv_ruleComandosAcao=ruleComandosAcao
	{ $current=$iv_ruleComandosAcao.current; }
	EOF;

// Rule ComandosAcao
ruleComandosAcao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComandosAcaoAccess().getClicarParserRuleCall_0());
		}
		this_Clicar_0=ruleClicar
		{
			$current = $this_Clicar_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandosAcaoAccess().getNavegarParserRuleCall_1());
		}
		this_Navegar_1=ruleNavegar
		{
			$current = $this_Navegar_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandosAcaoAccess().getEscreverParserRuleCall_2());
		}
		this_Escrever_2=ruleEscrever
		{
			$current = $this_Escrever_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEspera
entryRuleEspera returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEsperaRule()); }
	iv_ruleEspera=ruleEspera
	{ $current=$iv_ruleEspera.current; }
	EOF;

// Rule Espera
ruleEspera returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEsperaAccess().getEsperaPresenteParserRuleCall_0());
		}
		this_EsperaPresente_0=ruleEsperaPresente
		{
			$current = $this_EsperaPresente_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEsperaAccess().getEsperaVisivelParserRuleCall_1());
		}
		this_EsperaVisivel_1=ruleEsperaVisivel
		{
			$current = $this_EsperaVisivel_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEsperaAccess().getEsperaClicavelParserRuleCall_2());
		}
		this_EsperaClicavel_2=ruleEsperaClicavel
		{
			$current = $this_EsperaClicavel_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEsperaPresente
entryRuleEsperaPresente returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEsperaPresenteRule()); }
	iv_ruleEsperaPresente=ruleEsperaPresente
	{ $current=$iv_ruleEsperaPresente.current; }
	EOF;

// Rule EsperaPresente
ruleEsperaPresente returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Espere'
		{
			newLeafNode(otherlv_0, grammarAccess.getEsperaPresenteAccess().getEspereKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEsperaPresenteAccess().getTipoLocalizadorTipoLocalizadoresEnumRuleCall_1_0());
				}
				lv_tipoLocalizador_1_0=ruleTipoLocalizadores
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEsperaPresenteRule());
					}
					set(
						$current,
						"tipoLocalizador",
						lv_tipoLocalizador_1_0,
						"com.ufrn.atad.Atad.TipoLocalizadores");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEsperaPresenteAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEsperaPresenteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='estar presente'
		{
			newLeafNode(otherlv_3, grammarAccess.getEsperaPresenteAccess().getEstarPresenteKeyword_3());
		}
	)
;

// Entry rule entryRuleEsperaVisivel
entryRuleEsperaVisivel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEsperaVisivelRule()); }
	iv_ruleEsperaVisivel=ruleEsperaVisivel
	{ $current=$iv_ruleEsperaVisivel.current; }
	EOF;

// Rule EsperaVisivel
ruleEsperaVisivel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Espere'
		{
			newLeafNode(otherlv_0, grammarAccess.getEsperaVisivelAccess().getEspereKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEsperaVisivelAccess().getTipoLocalizadorTipoLocalizadoresEnumRuleCall_1_0());
				}
				lv_tipoLocalizador_1_0=ruleTipoLocalizadores
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEsperaVisivelRule());
					}
					set(
						$current,
						"tipoLocalizador",
						lv_tipoLocalizador_1_0,
						"com.ufrn.atad.Atad.TipoLocalizadores");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEsperaVisivelAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEsperaVisivelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='estar visivel'
		{
			newLeafNode(otherlv_3, grammarAccess.getEsperaVisivelAccess().getEstarVisivelKeyword_3());
		}
	)
;

// Entry rule entryRuleEsperaClicavel
entryRuleEsperaClicavel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEsperaClicavelRule()); }
	iv_ruleEsperaClicavel=ruleEsperaClicavel
	{ $current=$iv_ruleEsperaClicavel.current; }
	EOF;

// Rule EsperaClicavel
ruleEsperaClicavel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Espere'
		{
			newLeafNode(otherlv_0, grammarAccess.getEsperaClicavelAccess().getEspereKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEsperaClicavelAccess().getTipoLocalizadorTipoLocalizadoresEnumRuleCall_1_0());
				}
				lv_tipoLocalizador_1_0=ruleTipoLocalizadores
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEsperaClicavelRule());
					}
					set(
						$current,
						"tipoLocalizador",
						lv_tipoLocalizador_1_0,
						"com.ufrn.atad.Atad.TipoLocalizadores");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEsperaClicavelAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEsperaClicavelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='estar clicavel'
		{
			newLeafNode(otherlv_3, grammarAccess.getEsperaClicavelAccess().getEstarClicavelKeyword_3());
		}
	)
;

// Entry rule entryRuleVerifiquePresente
entryRuleVerifiquePresente returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifiquePresenteRule()); }
	iv_ruleVerifiquePresente=ruleVerifiquePresente
	{ $current=$iv_ruleVerifiquePresente.current; }
	EOF;

// Rule VerifiquePresente
ruleVerifiquePresente returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Verifique'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifiquePresenteAccess().getVerifiqueKeyword_0());
		}
		otherlv_1='que'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifiquePresenteAccess().getQueKeyword_1());
		}
		otherlv_2='o'
		{
			newLeafNode(otherlv_2, grammarAccess.getVerifiquePresenteAccess().getOKeyword_2());
		}
		otherlv_3='texto'
		{
			newLeafNode(otherlv_3, grammarAccess.getVerifiquePresenteAccess().getTextoKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_STRING
				{
					newLeafNode(lv_name_4_0, grammarAccess.getVerifiquePresenteAccess().getNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVerifiquePresenteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='esta'
		{
			newLeafNode(otherlv_5, grammarAccess.getVerifiquePresenteAccess().getEstaKeyword_5());
		}
		otherlv_6='presente'
		{
			newLeafNode(otherlv_6, grammarAccess.getVerifiquePresenteAccess().getPresenteKeyword_6());
		}
	)
;

// Entry rule entryRuleVerifiqueNaoPresente
entryRuleVerifiqueNaoPresente returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifiqueNaoPresenteRule()); }
	iv_ruleVerifiqueNaoPresente=ruleVerifiqueNaoPresente
	{ $current=$iv_ruleVerifiqueNaoPresente.current; }
	EOF;

// Rule VerifiqueNaoPresente
ruleVerifiqueNaoPresente returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Verifique'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifiqueNaoPresenteAccess().getVerifiqueKeyword_0());
		}
		otherlv_1='que'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifiqueNaoPresenteAccess().getQueKeyword_1());
		}
		otherlv_2='o'
		{
			newLeafNode(otherlv_2, grammarAccess.getVerifiqueNaoPresenteAccess().getOKeyword_2());
		}
		otherlv_3='texto'
		{
			newLeafNode(otherlv_3, grammarAccess.getVerifiqueNaoPresenteAccess().getTextoKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_STRING
				{
					newLeafNode(lv_name_4_0, grammarAccess.getVerifiqueNaoPresenteAccess().getNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVerifiqueNaoPresenteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='nao'
		{
			newLeafNode(otherlv_5, grammarAccess.getVerifiqueNaoPresenteAccess().getNaoKeyword_5());
		}
		otherlv_6='esta'
		{
			newLeafNode(otherlv_6, grammarAccess.getVerifiqueNaoPresenteAccess().getEstaKeyword_6());
		}
		otherlv_7='presente'
		{
			newLeafNode(otherlv_7, grammarAccess.getVerifiqueNaoPresenteAccess().getPresenteKeyword_7());
		}
	)
;

// Entry rule entryRuleComandosValidadores
entryRuleComandosValidadores returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComandosValidadoresRule()); }
	iv_ruleComandosValidadores=ruleComandosValidadores
	{ $current=$iv_ruleComandosValidadores.current; }
	EOF;

// Rule ComandosValidadores
ruleComandosValidadores returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComandosValidadoresAccess().getVerifiquePresenteParserRuleCall_0());
		}
		this_VerifiquePresente_0=ruleVerifiquePresente
		{
			$current = $this_VerifiquePresente_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandosValidadoresAccess().getVerifiqueNaoPresenteParserRuleCall_1());
		}
		this_VerifiqueNaoPresente_1=ruleVerifiqueNaoPresente
		{
			$current = $this_VerifiqueNaoPresente_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAdicaoComando
entryRuleAdicaoComando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdicaoComandoRule()); }
	iv_ruleAdicaoComando=ruleAdicaoComando
	{ $current=$iv_ruleAdicaoComando.current; }
	EOF;

// Rule AdicaoComando
ruleAdicaoComando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='E'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdicaoComandoAccess().getEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdicaoComandoAccess().getComandoComandosAcaoParserRuleCall_1_0());
				}
				lv_comando_1_0=ruleComandosAcao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdicaoComandoRule());
					}
					set(
						$current,
						"comando",
						lv_comando_1_0,
						"com.ufrn.atad.Atad.ComandosAcao");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQuando
entryRuleQuando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuandoRule()); }
	iv_ruleQuando=ruleQuando
	{ $current=$iv_ruleQuando.current; }
	EOF;

// Rule Quando
ruleQuando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Quando'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuandoAccess().getQuandoKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getQuandoAccess().getComandosAcaoParserRuleCall_1());
		}
		this_ComandosAcao_1=ruleComandosAcao
		{
			$current = $this_ComandosAcao_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Rule TipoLocalizadores
ruleTipoLocalizadores returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='xpath'
			{
				$current = grammarAccess.getTipoLocalizadoresAccess().getXPATHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTipoLocalizadoresAccess().getXPATHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='id'
			{
				$current = grammarAccess.getTipoLocalizadoresAccess().getIDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTipoLocalizadoresAccess().getIDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='cssSelector'
			{
				$current = grammarAccess.getTipoLocalizadoresAccess().getCSSSELECTOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTipoLocalizadoresAccess().getCSSSELECTOREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='className'
			{
				$current = grammarAccess.getTipoLocalizadoresAccess().getCLASSNAMEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTipoLocalizadoresAccess().getCLASSNAMEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='linkText'
			{
				$current = grammarAccess.getTipoLocalizadoresAccess().getLINKTEXTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTipoLocalizadoresAccess().getLINKTEXTEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
